' Code Generated by Sidekick is for learning and experimentation purposes only.

Sub ConsolidateExcelFiles_Faster()

    Dim folderPath As String
    Dim fileName As String
    Dim wbSource As Workbook
    Dim wsSource As Worksheet
    Dim wbDest As Workbook
    Dim wsDest As Worksheet
    Dim wsLog As Worksheet
    Dim wsPivot As Worksheet
    Dim i As Long, j As Long
    Dim caseID As String
    Dim description As String
    Dim timeTaken As Variant
    Dim timeTakenInHrs As Variant
    Dim errorMsg As String
    Dim uniqueFileName As String
    Dim dtNow As String
    Dim dataArr() As Variant
    Dim logArr() As Variant
    Dim dataCount As Long
    Dim logCount As Long
    Dim maxRows As Long
    Dim lastDataRow As Long
    Dim dataRange As Range

    ' Speed up macro
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Application.Calculation = xlCalculationManual
    Application.DisplayAlerts = False

    ' Prompt user to select folder
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Select Folder with Excel Files"
        If .Show = -1 Then
            folderPath = .SelectedItems(1) & "\"
        Else
            GoTo CleanUp
        End If
    End With

    ' Pre-allocate arrays for speed (adjust maxRows as needed)
    maxRows = 100000 ' Adjust if expecting more rows
    ReDim dataArr(1 To maxRows, 1 To 4)
    ReDim logArr(1 To maxRows, 1 To 2)
    dataCount = 0
    logCount = 0

    ' Loop through all .xlsx files in the folder
    fileName = Dir(folderPath & "*.xlsx")
    Do While fileName <> ""
        ' Ignore temp files and files with "consolidate" in their name (case-insensitive)
        If Left(fileName, 2) <> "~$" And InStr(1, LCase(fileName), "consolidate") = 0 Then
            On Error GoTo FileOpenError
            Set wbSource = Workbooks.Open(folderPath & fileName, ReadOnly:=True, UpdateLinks:=0, IgnoreReadOnlyRecommended:=True, AddToMru:=False)
            Set wsSource = wbSource.Sheets(1) ' Always Sheet1
            On Error GoTo 0

            caseID = wsSource.Range("B1").Value

            If Trim(caseID) = "" Then
                logCount = logCount + 1
                logArr(logCount, 1) = fileName
                logArr(logCount, 2) = "Missing Case ID in B1"
            End If

            For i = 4 To 27 ' F4:F27
                On Error Resume Next
                timeTaken = wsSource.Cells(i, 6).Value ' Column F
                If Err.Number <> 0 Then
                    logCount = logCount + 1
                    logArr(logCount, 1) = fileName
                    logArr(logCount, 2) = "Error reading cell F" & i
                    Err.Clear
                    On Error GoTo 0
                Else
                    On Error GoTo 0
                    If IsNumeric(timeTaken) And timeTaken > 0 And Trim(caseID) <> "" Then
                        description = wsSource.Cells(i, 1).Value ' Column A
                        dataCount = dataCount + 1
                        dataArr(dataCount, 1) = caseID
                        dataArr(dataCount, 2) = description
                        dataArr(dataCount, 3) = timeTaken
                        dataArr(dataCount, 4) = Round(timeTaken / 60, 2) ' Two decimal points
                    End If
                End If
            Next i

            wbSource.Close SaveChanges:=False
        End If
        fileName = Dir
        GoTo ContinueLoop

FileOpenError:
        logCount = logCount + 1
        logArr(logCount, 1) = fileName
        logArr(logCount, 2) = "Could not open file or missing Sheet1"
        Err.Clear
        On Error GoTo 0

ContinueLoop:
    Loop

    ' Create new workbook for consolidation
    Set wbDest = Workbooks.Add
    Set wsDest = wbDest.Sheets(1)
    wsDest.Name = "Consolidated"
    wsDest.Range("A1:D1").Value = Array("Case ID", "Description", "Time taken", "Time taken in HRS")

    ' Write dataArr to worksheet at once
    If dataCount > 0 Then
        wsDest.Range("A2").Resize(dataCount, 4).Value = dataArr
    End If
    wsDest.Columns(4).NumberFormat = "0.00"

    ' Add error log sheet and write logArr at once
    Set wsLog = wbDest.Sheets.Add(After:=wsDest)
    wsLog.Name = "Error Log"
    wsLog.Range("A1:B1").Value = Array("File Name", "Error Description")
    If logCount > 0 Then
        wsLog.Range("A2").Resize(logCount, 2).Value = logArr
    End If

    ' Add PivotTables sheet
    Set wsPivot = wbDest.Sheets.Add(After:=wsLog)
    wsPivot.Name = "PivotTables"

    ' Define data range for pivots (now includes column D)
    lastDataRow = wsDest.Cells(wsDest.Rows.Count, 1).End(xlUp).Row
    Set dataRange = wsDest.Range("A1:D" & lastDataRow)

    ' Create Pivot 1: Sum Time in HRS by Case ID
    Dim pivotCache1 As PivotCache
    Dim pivotTable1 As PivotTable
    Set pivotCache1 = wbDest.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=dataRange)
    Set pivotTable1 = wsPivot.PivotTables.Add(PivotCache:=pivotCache1, TableDestination:=wsPivot.Range("A3"), TableName:="Pivot_CaseID_SumHRS")
    With pivotTable1
        .PivotFields("Case ID").Orientation = xlRowField
        .AddDataField .PivotFields("Time taken in HRS"), "Total Time (HRS)", xlSum
    End With
    wsPivot.Range("A1").Value = "Pivot 1: Total Time (HRS) by Case ID"

    ' Create Pivot 2: Avg Time in HRS by Description
    Dim pivotCache2 As PivotCache
    Dim pivotTable2 As PivotTable
    Set pivotCache2 = wbDest.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=dataRange)
    Set pivotTable2 = wsPivot.PivotTables.Add(PivotCache:=pivotCache2, TableDestination:=wsPivot.Range("G3"), TableName:="Pivot_Description_AvgHRS")
    With pivotTable2
        .PivotFields("Description").Orientation = xlRowField
        .AddDataField .PivotFields("Time taken in HRS"), "Average Time (HRS)", xlAverage
    End With
    wsPivot.Range("G1").Value = "Pivot 2: Average Time (HRS) by Description"

    ' Generate unique file name with timestamp
    dtNow = Format(Now, "yyyymmdd_HHMM")
    uniqueFileName = folderPath & "Consolidated_" & dtNow & ".xlsx"
    wbDest.SaveAs uniqueFileName
    wbDest.Close SaveChanges:=False

    MsgBox "Consolidation complete! File saved as '" & uniqueFileName & "'.", vbInformation

CleanUp:
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True

End Sub
